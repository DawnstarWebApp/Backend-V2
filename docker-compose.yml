version: "3"
services:
  dawnstar-backend:
<<<<<<< Updated upstream
    image: dawnstar-backend
=======
    container_name: dawnstar-backend
>>>>>>> Stashed changes
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      - dawnstar-db
      - dawnstar-redis
    restart: on-failure
    environment:
<<<<<<< Updated upstream
      APP_PORT: ${APP_PORT}
      APP_ENV: ${APP_ENV}
      APP_NAME: ${APP_NAME}
      DB_HOST: dawnstar-db
      DB_NAME: ${DB_NAME}
      DB_PORT: ${DB_PORT}
    expose:
      - ${APP_PORT}
    networks:
      - dawnstar
=======
      APP_PORT: 3000
      APP_ENV: "development"
      APP_NAME: "development"
      DB_HOST: "dawnstar-db"
      DB_NAME: "dawnstardb"
      DB_PORT: 5432
    ports:
      - "3000:3000"
    networks:
      - dawnstar-db

>>>>>>> Stashed changes
  dawnstar-db:
    container_name: dawnstar-db
    image: postgres:14-alpine
    ports:
<<<<<<< Updated upstream
      - "${DB_PORT}:5432"
=======
      - "5432:5432"
>>>>>>> Stashed changes
    volumes:
      - ./postgresdata:/var/lib/postgresql/data
      - ./utils/migrations/dbinit.sql:/docker-entrypoint-initdb.d/dbinit.sql
    restart: on-failure
    environment:
<<<<<<< Updated upstream
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    networks:
      - dawnstar

  dawnstar-pgadmin:
    image: dpage/pgadmin4:6.2
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: ${ADMIN_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
      PGADMIN_LISTEN_PORT: 80
    ports:
      - "${PGADMIN_LISTEN_PORT}:80"
    volumes:
=======
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: dawnstardb
    networks:
      - dawnstar-db

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4:6.2
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: kennguch3@gmail.com
      PGADMIN_DEFAULT_PASSWORD: postgres
      PGADMIN_LISTEN_PORT: 80
    ports:
      - "8080:80"
    volumes:
#      - pgadmin-data:/var/lib/pgadmin
>>>>>>> Stashed changes
      - ./utils/servers.json:/pgadmin4/servers.json # preconfigured servers/connections
      - ./utils/pgpass:/pgpass # passwords for the connections in this files
    depends_on:
      - dawnstar-db
    networks:
<<<<<<< Updated upstream
      - dawnstar

  dawnstar-redis:
    image: redis:6.2.6-alpine
    restart: unless-stopped
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    ports:
      - "${REDIS_PORT}:6379"
    networks:
      - dawnstar
  dawnstar-nginx:
    build: ./nginx
    image: reverse-proxy
    ports:
      - "${NGINX_PORT}:80"
    depends_on:
      - dawnstar-backend
    healthcheck:
      test: curl --fail -s http://localhost:1337/ || exit 1
      interval: 1m30s
      timeout: 10s
      retries: 3
    networks:
      - dawnstar





#  dawnstar-rabbitmq:
#    image: rabbitmq:3.9.11-management-alpine
#    container_name: 'rabbitmq'
#    ports:
#      - "5672:5672"
#      - "15672:15672"
#    volumes:
#      - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
#      - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq
#    networks:
#      - dawnstar

networks:
  dawnstar:
    driver: bridge

=======
      - dawnstar-db

  dawnstar-redis:
    container_name: dawnstar-redis
    image: redis:6.2.6-alpine
    restart: unless-stopped
    environment:
      REDIS_PASSWORD: redis
    ports:
      - "6379:6379"
    networks:
      - dawnstar-db
networks:
  dawnstar-db:
    driver: bridge
volumes:
  dawnstar-db:
  pgadmin-data:
>>>>>>> Stashed changes
